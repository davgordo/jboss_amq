---
# Fundamentals
# usually this is set at the playbook level
transfer_method: copy-from-contoller
amq_version: 7.6.0
jboss_amq_artifact_name: amq-broker-{{ amq_version }}-bin.zip
amq_distribution: "{{ jboss_amq_artifact_name }}"
jboss_amq_artifact_source: https://access.redhat.com/jbossnetwork/restricted/softwareDownload.html?softwareId=79671
amq_root_dir: /opt/jboss/amq
amq_install_dir: "{{ amq_root_dir }}/install/amq-broker-{{ amq_version }}"
amq_broker_dir: "{{ amq_root_dir }}/brokers"
amq_user: jboss
amq_group: jboss
amq_broker_name: broker
amq_broker_data_dir: "data"
config_mode: generated
static_template_params: []

# Primary admin user and role with which the broker is created
amq_broker_admin:
  name: amq
  password: redhat
  role: admins
  
java_opts: " -XX:+PrintClassHistogram -XX:+UseG1GC -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Xms512M -Xmx4G -Dhawtio.realm=activemq  -Dhawtio.offline=\"true\" -Dhawtio.role=amq -Dhawtio.rolePrincipalClasses=org.apache.activemq.artemis.spi.core.security.jaas.RolePrincipal -Djolokia.policyLocation=${ARTEMIS_INSTANCE_ETC_URI}jolokia-access.xml -Djon.id=amq"

################## Generated Config Mode #####################
# All configuration options below pertain to the 'generated' #
# configuration mode, which is enabled bny default.          #
##############################################################

# Messaging users
amq_broker_users:
  - name: jboss
    password: "jboss"
    role: users

# Messaging roles
# each item of .permissions can be one of:
#   - createNonDurableQueue
#   - deleteNonDurableQueue
#   - createDurableQueue
#   - deleteDurableQueue
#   - createAddress
#   - deleteAddress
#   - consume
#   - browse
#   - send
#   - manage
amq_broker_roles:
  - name: users
    permissions:
      - browse
      - consume
      - send

# Clustering
amq_broker_clustered: True
amq_broker_cluster_user: amq
amq_broker_cluster_password: "amq"
amq_broker_cluster_maxhops: 1
amq_broker_cluster_load_balancing_policy: ON_DEMAND
amq_broker_cluster_discovery: True
amq_broker_replicate: False
amq_broker_replicated: False

## Shared Storage
amq_broker_shared_storage: False

## Ports
amq_broker_ports_offset_enabled: False
amq_broker_ports_offset: 0

# Queues
amq_broker_disable_destination_autocreate: True
amq_broker_queues: queue.in,queue.out

# NIO option
amq_broker_nio: False

# TLS
amq_broker_tls: False
amq_broker_tls_keystore:
amq_broker_tls_keystore_password:
amq_broker_tls_keystore_dest: "{{ amq_broker_dir }}/{{ amq_broker_name }}/etc/identity.ks"

# Patch AMQ
amq_broker_patch: False

# Mutual authentication (requires TLS)
amq_broker_tls_mutual_authentication: False
amq_broker_tls_truststore:
amq_broker_tls_truststore_password:
amq_broker_tls_truststore_dest: "{{ amq_broker_dir }}/{{ amq_broker_name }}/etc/trust.ks"

# Protocol disablement
amq_broker_disable_amqp_protocol: False
amq_broker_disable_hornetq_protocol: False
amq_broker_disable_mqtt_protocol: False
amq_broker_disable_stomp_protocol: False

# Port assignments
amq_broker_ports:
  artemis:
    port: "{{ (61616|int + amq_broker_ports_offset|int)|abs }}"
  amqp:
    port: "{{ (5672|int + amq_broker_ports_offset|int)|abs }}"
  stomp:
    port: "{{ (61613|int + amq_broker_ports_offset|int)|abs }}"
  hornetq:
    port: "{{ (5445|int + amq_broker_ports_offset|int)|abs }}"
  mqtt:
    port: "{{ (1833|int + amq_broker_ports_offset|int)|abs }}"
